#!/bin/bash
export LC_ALL=C
HOSTNAME=$(hostname)
USERNAME=$(whoami | tr '[:upper:]' '[:lower:]')
export UUID=${UUID:-$(echo -n "$USERNAME+$HOSTNAME+$(date +%s)" | sha256sum | head -c 32 | sed -E 's/(.{6})(.{5})(.{4})(.{4})(.{13})/\1-\2-\3-\4-\5/')}
export NEZHA_SERVER=${NEZHA_SERVER:-''}
export NEZHA_PORT=${NEZHA_PORT:-''}
export NEZHA_KEY=${NEZHA_KEY:-''}
export SUB_TOKEN=${SUB_TOKEN:-${UUID:0:8}}

if [[ "$HOSTNAME" =~ ct8 ]]; then
    CURRENT_DOMAIN="ct8.pl"
elif [[ "$HOSTNAME" =~ hostuno ]]; then
    CURRENT_DOMAIN="useruno.com"
else
    CURRENT_DOMAIN="serv00.net"
fi

WORKDIR="${HOME}/domains/${USERNAME}.${CURRENT_DOMAIN}/logs"
FILE_PATH="${HOME}/domains/${USERNAME}.${CURRENT_DOMAIN}/public_html"
rm -rf "$WORKDIR" "$FILE_PATH" && mkdir -p "$WORKDIR" "$FILE_PATH" >/dev/null 2>&1
bash -c 'ps aux | grep $(whoami) | grep -v "sshd\|bash\|grep" | awk "{print \$2}" | xargs -r kill -9 >/dev/null 2>&1' >/dev/null 2>&1
command -v curl &>/dev/null && COMMAND="curl -so" || command -v wget &>/dev/null && COMMAND="wget -qO" || exit 1

validate_ports() {
  port_list=$(devil port list)
  udp_ports=$(echo "$port_list" | grep -c "udp")
  if [[ $udp_ports -lt 1 ]]; then
      if [[ $(echo "$port_list" | grep -c "tcp") -ge 3 ]]; then
          devil port del tcp $(echo "$port_list" | awk '/tcp/ {print $1}' | head -n 1) >/dev/null
      fi
      while true; do
          udp_port=$(shuf -i 10000-65535 -n 1)
          devil port add udp $udp_port >/dev/null 2>&1 && break
      done
      udp_port1=$udp_port
  else
      udp_port1=$(echo "$port_list" | awk '/udp/ {print $1}' | head -n 1)
  fi
  export PORT=$udp_port1
}

validate_ports

ARCH=$(uname -m)
DOWNLOAD_DIR="." && mkdir -p "$DOWNLOAD_DIR"
RAND_PATH=$(head /dev/urandom | tr -dc 'a-z0-9' | head -c 8)
if [ "$ARCH" == "arm" ] || [ "$ARCH" == "arm64" ] || [ "$ARCH" == "aarch64" ]; then
    BASE_URL="https://github.com/user123/repo1/releases/download/$RAND_PATH-arm"
else
    BASE_URL="https://github.com/user123/repo1/releases/download/$RAND_PATH"
fi

declare -A FILE_MAP
FILE_MAP["web-server"]="$BASE_URL/app1"
[ -n "$NEZHA_PORT" ] && FILE_MAP["agent"]="$BASE_URL/app2" || FILE_MAP["monitor"]="$BASE_URL/app3"

generate_random_name() {
    echo $(head /dev/urandom | tr -dc 'a-z0-9' | head -c 6)
}

for key in "${!FILE_MAP[@]}"; do
    RAND_NAME=$(generate_random_name)
    $COMMAND "$DOWNLOAD_DIR/$RAND_NAME" "${FILE_MAP[$key]}"
    chmod +x "$DOWNLOAD_DIR/$RAND_NAME"
    FILE_MAP[$key]="$DOWNLOAD_DIR/$RAND_NAME"
done

openssl req -x509 -nodes -newkey ec:<(openssl ecparam -name prime256v1) -keyout "$WORKDIR/server.key" -out "$WORKDIR/server.crt" -subj "/CN=cloud" -days 36500 >/dev/null 2>&1

get_ip() {
  IP_LIST=($(devil vhost list | awk '/^[0-9]+/ {print $1}'))
  API="https://api.example.com/check"
  THIRD_IP=${IP_LIST[2]}
  RESPONSE=$(curl -s --max-time 2 "${API}/${THIRD_IP}")
  [[ $(echo "$RESPONSE" | jq -r '.status') == "up" ]] && IP=$THIRD_IP || IP=${IP_LIST[1]}
  echo "$IP"
}

HOST_IP=$(get_ip)

cat > config.yaml <<EOF
listen: $HOST_IP:$PORT
tls:
  cert: "$WORKDIR/server.crt"
  key: "$WORKDIR/server.key"
auth:
  type: password
  password: "$UUID"
masquerade:
  type: proxy
  proxy:
    url: https://example.com
    rewriteHost: true
EOF

setup_watchdog() {
    devil www del keep.${USERNAME}.${CURRENT_DOMAIN} >/dev/null 2>&1
    devil www add keep.${USERNAME}.${CURRENT_DOMAIN} nodejs /usr/local/bin/node18 >/dev/null 2>&1
    keep_path="$HOME/domains/keep.${USERNAME}.${CURRENT_DOMAIN}/public_nodejs"
    mkdir -p "$keep_path"
    $COMMAND "${keep_path}/app.js" "https://raw.githubusercontent.com/user123/repo1/main/watchdog.js" >/dev/null 2>&1
    devil www restart keep.${USERNAME}.${CURRENT_DOMAIN} >/dev/null 2>&1
}

run_services() {
  nohup ./${FILE_MAP["web-server"]} server config.yaml >/dev/null 2>&1 &
  if [ -n "$NEZHA_SERVER" ] && [ -n "$NEZHA_PORT" ] && [ -n "$NEZHA_KEY" ]; then
      [[ "${NEZHA_PORT}" =~ "443|8443" ]] && TLS_FLAG="--tls" || TLS_FLAG=""
      nohup ./${FILE_MAP["agent"]} -s ${NEZHA_SERVER}:${NEZHA_PORT} -p ${NEZHA_KEY} ${TLS_FLAG} >/dev/null 2>&1 &
  elif [ -n "$NEZHA_SERVER" ] && [ -n "$NEZHA_KEY" ]; then
      nohup ./${FILE_MAP["monitor"]} -c "${WORKDIR}/config.yaml" >/dev/null 2>&1 &
  fi
  rm -f ${FILE_MAP["web-server"]} ${FILE_MAP["agent"]} ${FILE_MAP["monitor"]} >/dev/null 2>&1
}

run_services

ISP=$(curl -s --max-time 2 https://speed.cloudflare.com/meta | awk -F\" '{print $26}' | sed -e 's/ /_/g' || echo "Unknown")
SERVER_TAG="${HOSTNAME:0:2}-${USERNAME}"

cat > ${FILE_PATH}/${SUB_TOKEN}.conf <<EOF
hy2://$UUID@$HOST_IP:$PORT/?sni=example.com&insecure=1#$ISP-$SERVER_TAG
EOF

echo "Config URL: https://${USERNAME}.${CURRENT_DOMAIN}/${SUB_TOKEN}.conf"
setup_watchdog
rm -f config.yaml
